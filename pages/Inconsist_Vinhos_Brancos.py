import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

st.set_page_config(
    page_title="An√°lise de Vinhos Brancos",
    page_icon="üç∑",
    layout="wide"
)

st.title("An√°lise de Vinhos Brancos por Clusters")

st.markdown("""
Esta aplica√ß√£o analisa dados de vinhos brancos portugueses e utiliza algoritmos de clusteriza√ß√£o para agrupar 
vinhos com caracter√≠sticas qu√≠micas similares. Isto nos ajuda a entender quais propriedades qu√≠micas 
influenciam a qualidade do vinho.
""")

@st.cache_data
def load_data():
    df = pd.read_csv('data/raw/winequality-white.csv', sep=';')
    return df

try:
    df = load_data()
    
    st.subheader("Primeiras linhas do dataset")
    st.markdown("""
    Abaixo est√£o as primeiras linhas do conjunto de dados, mostrando as caracter√≠sticas qu√≠micas 
    e pontua√ß√µes de qualidade dos vinhos brancos.
    """)
    st.dataframe(df.head())
    
    st.subheader("Informa√ß√µes do dataset")
    st.markdown("""
    Este dataset cont√©m diversas propriedades qu√≠micas dos vinhos brancos, como acidez, n√≠veis de a√ß√∫car, 
    e √°lcool, junto com uma pontua√ß√£o de qualidade (de 0 a 10) atribu√≠da por especialistas.
    """)
    col1, col2 = st.columns(2)
    with col1:
        st.write(f"Total de registros: {df.shape[0]}")
        st.write(f"Total de colunas: {df.shape[1]}")
    with col2:
        st.write("Estat√≠sticas descritivas:")
        st.dataframe(df.describe())
    
    features = df.drop('quality', axis=1)
    feature_names = features.columns.tolist()
    
    scaler = StandardScaler()
    scaled_features = scaler.fit_transform(features)
    
    st.subheader("Clusteriza√ß√£o K-Means")
    st.markdown("""
    A clusteriza√ß√£o K-Means agrupa os vinhos com base em suas propriedades qu√≠micas. 
    Mova o slider abaixo para alterar o n√∫mero de grupos (clusters) e observe como os vinhos s√£o reorganizados.
    
    **O que significa:** Vinhos no mesmo cluster t√™m propriedades qu√≠micas semelhantes, independentemente de sua qualidade.
    """)
    k = st.slider("Selecione o n√∫mero de clusters (k)", min_value=2, max_value=10, value=3)
    
    @st.cache_data
    def apply_kmeans(scaled_data, num_clusters):
        kmeans = KMeans(n_clusters=num_clusters, random_state=42, n_init=10)
        clusters = kmeans.fit_predict(scaled_data)
        return clusters, kmeans
    
    clusters, kmeans_model = apply_kmeans(scaled_features, k)
    
    df_with_clusters = df.copy()
    df_with_clusters['cluster'] = clusters
    
    pca = PCA(n_components=2)
    principal_components = pca.fit_transform(scaled_features)
    
    st.subheader("Visualiza√ß√£o dos Clusters (PCA)")
    st.markdown("""
    Este gr√°fico mostra como os vinhos se agrupam quando reduzimos todas as caracter√≠sticas a apenas duas dimens√µes.
    
    **Como interpretar:** 
    - Cada ponto representa um vinho
    - Cores diferentes representam clusters diferentes
    - Pontos pr√≥ximos t√™m caracter√≠sticas qu√≠micas similares
    - Agrupamentos bem definidos (com cores separadas) indicam clusters bem formados
    """)
    fig, ax = plt.subplots(figsize=(10, 6))
    scatter = ax.scatter(
        principal_components[:, 0], 
        principal_components[:, 1], 
        c=clusters, 
        cmap='viridis', 
        alpha=0.6
    )
    ax.set_xlabel('Componente Principal 1')
    ax.set_ylabel('Componente Principal 2')
    ax.set_title('Clusters de Vinhos Brancos (PCA)')
    plt.colorbar(scatter, label='Cluster')
    st.pyplot(fig)
    
    st.subheader("Qualidade por Cluster")
    st.markdown("""
    Este gr√°fico mostra como as pontua√ß√µes de qualidade est√£o distribu√≠das em cada cluster.
    
    **Como interpretar:**
    - A linha horizontal dentro de cada caixa representa a mediana da qualidade
    - As bordas das caixas mostram o primeiro e terceiro quartis (25% e 75%)
    - As linhas verticais (whiskers) mostram a faixa de varia√ß√£o, excluindo outliers
    - Pontos individuais s√£o outliers (valores muito distantes da m√©dia)
    
    **O que procurar:** Clusters com medianas mais altas tendem a conter vinhos de melhor qualidade.
    """)
    fig, ax = plt.subplots(figsize=(12, 6))
    sns.boxplot(x='cluster', y='quality', data=df_with_clusters, ax=ax)
    ax.set_title('Distribui√ß√£o da Qualidade por Cluster')
    ax.set_xlabel('Cluster')
    ax.set_ylabel('Qualidade')
    st.pyplot(fig)
    
    st.subheader("An√°lise Detalhada por Cluster")
    st.markdown("""
    Selecione um cluster espec√≠fico para analisar detalhadamente sua composi√ß√£o e caracter√≠sticas.
    """)
    selected_cluster = st.selectbox("Selecione um cluster para an√°lise", sorted(df_with_clusters['cluster'].unique()))
    
    cluster_data = df_with_clusters[df_with_clusters['cluster'] == selected_cluster]
    
    cluster_data['quality_category'] = pd.cut(
        cluster_data['quality'], 
        bins=[0, 5, 6, 10], 
        labels=['Baixa (<=5)', 'M√©dia (6)', 'Alta (>=7)']
    )
    
    st.write(f"Distribui√ß√£o da qualidade no cluster {selected_cluster}:")
    st.markdown("""
    Esta an√°lise mostra como os vinhos deste cluster se distribuem entre as categorias de qualidade.
    """)
    quality_counts = cluster_data['quality_category'].value_counts().reset_index()
    quality_counts.columns = ['Categoria', 'Contagem']
    
    col1, col2 = st.columns([1, 2])
    with col1:
        st.dataframe(quality_counts)
    with col2:
        fig, ax = plt.subplots(figsize=(8, 5))
        sns.countplot(x='quality_category', data=cluster_data, ax=ax)
        ax.set_title(f'Distribui√ß√£o de Qualidade no Cluster {selected_cluster}')
        st.pyplot(fig)
    
    st.subheader(f"Compara√ß√£o de Propriedades Qu√≠micas por Qualidade no Cluster {selected_cluster}")
    st.markdown("""
    Este gr√°fico compara as propriedades qu√≠micas m√©dias entre vinhos de baixa qualidade (‚â§5) e alta qualidade (‚â•7) 
    dentro do cluster selecionado.
    
    **Como interpretar:**
    - Barras mais altas indicam valores m√©dios maiores para aquela propriedade
    - Diferen√ßas significativas entre as barras azuis e laranjas para uma mesma propriedade 
      sugerem que essa caracter√≠stica pode ser importante para a qualidade do vinho
    
    **Insight:** Procure as maiores diferen√ßas entre vinhos de baixa e alta qualidade para identificar 
    quais propriedades qu√≠micas mais influenciam a qualidade.
    """)
    
    low_quality = cluster_data[cluster_data['quality'] <= 5]
    high_quality = cluster_data[cluster_data['quality'] >= 7]
    
    if len(low_quality) > 0 and len(high_quality) > 0:
        comparison_data = pd.DataFrame({
            'Propriedade': feature_names,
            'Baixa Qualidade (<=5)': low_quality[feature_names].mean().values,
            'Alta Qualidade (>=7)': high_quality[feature_names].mean().values
        })
        
        st.dataframe(comparison_data)
        
        fig, ax = plt.subplots(figsize=(14, 8))
        comparison_data_melted = pd.melt(
            comparison_data, 
            id_vars=['Propriedade'], 
            var_name='Categoria de Qualidade', 
            value_name='Valor M√©dio'
        )
        
        sns.barplot(
            x='Propriedade', 
            y='Valor M√©dio', 
            hue='Categoria de Qualidade', 
            data=comparison_data_melted,
            ax=ax
        )
        
        plt.xticks(rotation=45)
        plt.title(f'Compara√ß√£o de Propriedades Qu√≠micas por Qualidade no Cluster {selected_cluster}')
        plt.tight_layout()
        st.pyplot(fig)
    else:
        st.warning("N√£o h√° dados suficientes de vinhos de baixa ou alta qualidade neste cluster para fazer a compara√ß√£o.")
        st.markdown("""
        Este cluster n√£o possui exemplos suficientes em ambas as categorias (baixa e alta qualidade) 
        para permitir uma compara√ß√£o significativa. Isso pode indicar que este cluster √© mais homog√™neo 
        em termos de qualidade.
        """)
    
    st.subheader("Conclus√µes")
    st.markdown("""
    Esta an√°lise permite identificar:
    
    1. Como os vinhos se agrupam naturalmente com base em suas propriedades qu√≠micas
    2. Quais clusters tendem a conter vinhos de maior qualidade
    3. Quais propriedades qu√≠micas diferenciam vinhos de alta e baixa qualidade dentro de um mesmo cluster
    
    Essas informa√ß√µes podem ajudar produtores a entender quais aspectos qu√≠micos mais contribuem para a 
    qualidade percebida dos vinhos brancos.
    """)
    
except Exception as e:
    st.error(f"Erro ao carregar os dados: {e}")
    st.info("Verifique se o arquivo 'winequality-white.csv' est√° dispon√≠vel no diret√≥rio correto.")
